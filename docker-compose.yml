version: '3.8'

services: 
  nas-website:
    container_name: nas-website
    build:
      context: .
      dockerfile: Dockerfile  # PHP-Apache Dockerfile
    volumes: 
      - ./app/:/var/www/html/
      - ./nas-website-files/user_files/:/home/nas-website-files/user_files # Datenverzeichnis Website
      - ./nas-website-files/tmp_zips/:/home/nas-website-files/tmp_zips # Temporäre Zips
    ports:
      - "80:80"
      - "8443:443"
    restart: unless-stopped
    environment:
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_PASSWORD: 59LWrt!mDo6GC4
      MYSQL_DATABASE: nas-website
    networks:
      - nas-network
      - update-network

  db:
    image: mysql:latest
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 59LWrt!mDo6GC4
      MYSQL_DATABASE: nas-website
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./app/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nas-network
      - update-network

  flask-server:
    container_name: flask-server
    build:
      context: ./flask-upload   # Flask-Server Dockerfile
      dockerfile: Dockerfile
    ports:
      - "8080:5001"
    restart: unless-stopped
    volumes:
      - ./nas-website-files/user_files/:/home/nas-website-files/user_files # Datenverzeichnis Website
      - ./nas-website-files/tmp_zips/:/home/nas-website-files/tmp_zips # Temporäre Zips
    environment:
      - FLASK_APP=app.py
    networks:
      - nas-network
      - update-network  

volumes:
  mysql_data:
  flask-upload-data:

networks:
  nas-network:
    driver: bridge
  update-network: 
    driver: bridge